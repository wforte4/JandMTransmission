{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios, { AxiosRequestConfig } from \"axios\";\nimport { catchAxiosError } from \"./error\"; // Base Url for the rest api -- Every other directory can be accessed baseURL + \"/%s\";\n\nexport const baseConfig = {\n  baseURL: \"http://localhost:3600\"\n}; // Post a request to the Go-lang Rest Api plus catch error if necessary\n\nexport const post = (url, data) => {\n  return axios.post(url, data, baseConfig).catch(catchAxiosError);\n};\nexport const postFile = (url, data, config) => {\n  return axios.post(url, data, config).catch(catchAxiosError);\n}; // Get the requested json from Go-lang Rest Api plus catch error\n\nexport const get = async (url, config = {}) => {\n  const axiosConfig = _objectSpread({}, baseConfig, {}, config);\n\n  return await axios.get(url, axiosConfig).catch(catchAxiosError);\n};","map":{"version":3,"sources":["/Users/williamforte/Canvas/uncle-steven/services/restservice.js"],"names":["axios","AxiosRequestConfig","catchAxiosError","baseConfig","baseURL","post","url","data","catch","postFile","config","get","axiosConfig"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,kBAAhB,QAA0C,OAA1C;AACA,SAASC,eAAT,QAAgC,SAAhC,C,CAEA;;AACA,OAAO,MAAMC,UAAU,GAAG;AACxBC,EAAAA,OAAO,EAAE;AADe,CAAnB,C,CAIP;;AACA,OAAO,MAAMC,IAAI,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AACjC,SAAOP,KAAK,CAACK,IAAN,CAAWC,GAAX,EAAgBC,IAAhB,EAAsBJ,UAAtB,EAAkCK,KAAlC,CAAwCN,eAAxC,CAAP;AACD,CAFM;AAIP,OAAO,MAAMO,QAAQ,GAAG,CAACH,GAAD,EAAMC,IAAN,EAAYG,MAAZ,KAAuB;AAC7C,SAAOV,KAAK,CAACK,IAAN,CAAWC,GAAX,EAAgBC,IAAhB,EAAsBG,MAAtB,EAA8BF,KAA9B,CAAoCN,eAApC,CAAP;AACD,CAFM,C,CAIP;;AACA,OAAO,MAAMS,GAAG,GAAG,OAAOL,GAAP,EAAYI,MAAM,GAAG,EAArB,KAA4B;AAC7C,QAAME,WAAW,qBACZT,UADY,MAEZO,MAFY,CAAjB;;AAIA,SAAO,MAAMV,KAAK,CAACW,GAAN,CAAUL,GAAV,EAAeM,WAAf,EAA4BJ,KAA5B,CAAkCN,eAAlC,CAAb;AACD,CANM","sourcesContent":["import axios, { AxiosRequestConfig } from \"axios\";\nimport { catchAxiosError } from \"./error\";\n\n// Base Url for the rest api -- Every other directory can be accessed baseURL + \"/%s\";\nexport const baseConfig = {\n  baseURL: \"http://localhost:3600\",\n};\n\n// Post a request to the Go-lang Rest Api plus catch error if necessary\nexport const post = (url, data) => {\n  return axios.post(url, data, baseConfig).catch(catchAxiosError);\n};\n\nexport const postFile = (url, data, config) => {\n  return axios.post(url, data, config).catch(catchAxiosError);\n}\n\n// Get the requested json from Go-lang Rest Api plus catch error\nexport const get = async (url, config = {}) => {\n  const axiosConfig = {\n    ...baseConfig,\n    ...config,\n  };\n  return await axios.get(url, axiosConfig).catch(catchAxiosError)\n};\n"]},"metadata":{},"sourceType":"module"}